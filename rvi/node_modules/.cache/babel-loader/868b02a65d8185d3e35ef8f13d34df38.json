{"remainingRequest":"/media/alessio/Files/Universita/Magistrale/AI/SHRI/flightbooking-chatbot/rasa-voice-interface/node_modules/babel-loader/lib/index.js!/media/alessio/Files/Universita/Magistrale/AI/SHRI/flightbooking-chatbot/rasa-voice-interface/src/assets/lib/vad.js","dependencies":[{"path":"/media/alessio/Files/Universita/Magistrale/AI/SHRI/flightbooking-chatbot/rasa-voice-interface/src/assets/lib/vad.js","mtime":1577442544062},{"path":"/media/alessio/Files/Universita/Magistrale/AI/SHRI/flightbooking-chatbot/rasa-voice-interface/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/media/alessio/Files/Universita/Magistrale/AI/SHRI/flightbooking-chatbot/rasa-voice-interface/node_modules/babel-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.typed.float32-array\";\nimport \"core-js/modules/es6.array.filter\";\n\n/* eslint-disable no-unused-vars */\n(function (window) {\n  var VAD = function VAD(options) {\n    // Default options\n    this.options = {\n      fftSize: 512,\n      bufferLen: 512,\n      voice_stop: function voice_stop() {},\n      voice_start: function voice_start() {},\n      smoothingTimeConstant: 0.99,\n      energy_offset: 1e-8,\n      // The initial offset.\n      energy_threshold_ratio_pos: 2,\n      // Signal must be twice the offset\n      energy_threshold_ratio_neg: 0.5,\n      // Signal must be half the offset\n      energy_integration: 1,\n      // Size of integration change compared to the signal per second.\n      filter: [{\n        f: 200,\n        v: 0\n      }, // 0 -> 200 is 0\n      {\n        f: 2000,\n        v: 1 // 200 -> 2k is 1\n\n      }],\n      source: null,\n      context: null\n    }; // User options\n    // eslint-disable-next-line no-restricted-syntax\n\n    for (var option in options) {\n      // eslint-disable-next-line no-prototype-builtins\n      if (options.hasOwnProperty(option)) {\n        this.options[option] = options[option];\n      }\n    } // Require source\n\n\n    if (!this.options.source) {\n      throw new Error('The options must specify a MediaStreamAudioSourceNode.');\n    } // Set this.options.context\n\n\n    this.options.context = this.options.source.context; // Calculate time relationships\n\n    this.hertzPerBin = this.options.context.sampleRate / this.options.fftSize;\n    this.iterationFrequency = this.options.context.sampleRate / this.options.bufferLen;\n    this.iterationPeriod = 1 / this.iterationFrequency;\n    var DEBUG = true;\n\n    if (DEBUG) {\n      console.log(\"\".concat('Vad' + ' | sampleRate: ').concat(this.options.context.sampleRate, \" | hertzPerBin: \").concat(this.hertzPerBin, \" | iterationFrequency: \").concat(this.iterationFrequency, \" | iterationPeriod: \").concat(this.iterationPeriod));\n    }\n\n    this.setFilter = function (shape) {\n      this.filter = [];\n\n      for (var i = 0, iLen = this.options.fftSize / 2; i < iLen; i += 1) {\n        this.filter[i] = 0;\n\n        for (var j = 0, jLen = shape.length; j < jLen; j += 1) {\n          if (i * this.hertzPerBin < shape[j].f) {\n            this.filter[i] = shape[j].v;\n            break; // Exit j loop\n          }\n        }\n      }\n    };\n\n    this.setFilter(this.options.filter);\n    this.ready = {};\n    this.vadState = false; // True when Voice Activity Detected\n    // Energy detector props\n\n    this.energy_offset = this.options.energy_offset;\n    this.energy_threshold_pos = this.energy_offset * this.options.energy_threshold_ratio_pos;\n    this.energy_threshold_neg = this.energy_offset * this.options.energy_threshold_ratio_neg;\n    this.voiceTrend = 0;\n    this.voiceTrendMax = 10;\n    this.voiceTrendMin = -10;\n    this.voiceTrendStart = 5;\n    this.voiceTrendEnd = -5; // Create analyser\n\n    this.analyser = this.options.context.createAnalyser();\n    this.analyser.smoothingTimeConstant = this.options.smoothingTimeConstant; // 0.99;\n\n    this.analyser.fftSize = this.options.fftSize;\n    this.floatFrequencyData = new Float32Array(this.analyser.frequencyBinCount); // Setup local storage of the Linear FFT data\n\n    this.floatFrequencyDataLinear = new Float32Array(this.floatFrequencyData.length); // Connect this.analyser\n\n    this.options.source.connect(this.analyser); // Create ScriptProcessorNode\n\n    this.scriptProcessorNode = this.options.context.createScriptProcessor(this.options.bufferLen, 1, 1); // Connect scriptProcessorNode (Theretically, not required)\n\n    this.scriptProcessorNode.connect(this.options.context.destination); // Create callback to update/analyze floatFrequencyData\n\n    var self = this;\n\n    this.scriptProcessorNode.onaudioprocess = function (event) {\n      self.analyser.getFloatFrequencyData(self.floatFrequencyData);\n      self.update();\n      self.monitor();\n    }; // Connect scriptProcessorNode\n\n\n    this.options.source.connect(this.scriptProcessorNode); // log stuff\n\n    this.logging = false;\n    this.log_i = 0;\n    this.log_limit = 100;\n\n    this.triggerLog = function (limit) {\n      this.logging = true;\n      this.log_i = 0;\n      this.log_limit = typeof limit === 'number' ? limit : this.log_limit;\n    };\n\n    this.log = function (msg) {\n      if (this.logging && this.log_i < this.log_limit) {\n        this.log_i += 1;\n        console.log(msg);\n      } else {\n        this.logging = false;\n      }\n    };\n\n    this.update = function () {\n      // Update the local version of the Linear FFT\n      var fft = this.floatFrequencyData;\n\n      for (var i = 0, iLen = fft.length; i < iLen; i += 1) {\n        // eslint-disable-next-line no-restricted-properties\n        this.floatFrequencyDataLinear[i] = Math.pow(10, fft[i] / 10);\n      }\n\n      this.ready = {};\n    };\n\n    this.getEnergy = function () {\n      if (this.ready.energy) {\n        return this.energy;\n      }\n\n      var energy = 0;\n      var fft = this.floatFrequencyDataLinear;\n\n      for (var i = 0, iLen = fft.length; i < iLen; i += 1) {\n        energy += this.filter[i] * fft[i] * fft[i];\n      }\n\n      this.energy = energy;\n      this.ready.energy = true;\n      return energy;\n    };\n\n    this.monitor = function () {\n      var energy = this.getEnergy();\n      var signal = energy - this.energy_offset;\n\n      if (signal > this.energy_threshold_pos) {\n        this.voiceTrend = this.voiceTrend + 1 > this.voiceTrendMax ? this.voiceTrendMax : this.voiceTrend + 1;\n      } else if (signal < -this.energy_threshold_neg) {\n        this.voiceTrend = this.voiceTrend - 1 < this.voiceTrendMin ? this.voiceTrendMin : this.voiceTrend - 1;\n      } else {\n        // voiceTrend gets smaller\n        // eslint-disable-next-line no-lonely-if\n        if (this.voiceTrend > 0) {\n          this.voiceTrend -= 1;\n        } else if (this.voiceTrend < 0) {\n          this.voiceTrend += 1;\n        }\n      }\n\n      var start = false;\n      var end = false;\n\n      if (this.voiceTrend > this.voiceTrendStart) {\n        // Start of speech detected\n        start = true;\n      } else if (this.voiceTrend < this.voiceTrendEnd) {\n        // End of speech detected\n        end = true;\n      } // Integration brings in the real-time aspect through the relationship with the frequency this functions is called.\n\n\n      var integration = signal * this.iterationPeriod * this.options.energy_integration; // Idea?: The integration is affected by the voiceTrend magnitude? - Not sure. Not doing atm.\n      // The !end limits the offset delta boost till after the end is detected.\n\n      if (integration > 0 || !end) {\n        this.energy_offset += integration;\n      } else {\n        this.energy_offset += integration * 10;\n      }\n\n      this.energy_offset = this.energy_offset < 0 ? 0 : this.energy_offset;\n      this.energy_threshold_pos = this.energy_offset * this.options.energy_threshold_ratio_pos;\n      this.energy_threshold_neg = this.energy_offset * this.options.energy_threshold_ratio_neg; // Broadcast the messages\n\n      if (start && !this.vadState) {\n        this.vadState = true;\n        this.options.voice_start();\n      }\n\n      if (end && this.vadState) {\n        this.vadState = false;\n        this.options.voice_stop();\n      }\n\n      this.log(\"e: \".concat(energy, \" | e_of: \").concat(this.energy_offset, \" | e+_th: \").concat(this.energy_threshold_pos, \" | e-_th: \").concat(this.energy_threshold_neg, \" | signal: \").concat(signal, \" | int: \").concat(integration, \" | voiceTrend: \").concat(this.voiceTrend, \" | start: \").concat(start, \" | end: \").concat(end));\n      return signal;\n    };\n  }; // eslint-disable-next-line no-param-reassign\n\n\n  window.VAD = VAD;\n})(window);",{"version":3,"sources":["/media/alessio/Files/Universita/Magistrale/AI/SHRI/flightbooking-chatbot/rasa-voice-interface/src/assets/lib/vad.js"],"names":["window","VAD","options","fftSize","bufferLen","voice_stop","voice_start","smoothingTimeConstant","energy_offset","energy_threshold_ratio_pos","energy_threshold_ratio_neg","energy_integration","filter","f","v","source","context","option","hasOwnProperty","Error","hertzPerBin","sampleRate","iterationFrequency","iterationPeriod","DEBUG","console","log","setFilter","shape","i","iLen","j","jLen","length","ready","vadState","energy_threshold_pos","energy_threshold_neg","voiceTrend","voiceTrendMax","voiceTrendMin","voiceTrendStart","voiceTrendEnd","analyser","createAnalyser","floatFrequencyData","Float32Array","frequencyBinCount","floatFrequencyDataLinear","connect","scriptProcessorNode","createScriptProcessor","destination","self","onaudioprocess","event","getFloatFrequencyData","update","monitor","logging","log_i","log_limit","triggerLog","limit","msg","fft","Math","pow","getEnergy","energy","signal","start","end","integration"],"mappings":"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","sourcesContent":["/* eslint-disable no-unused-vars */\n(function(window) {\n\tconst VAD = function(options) {\n\t\t// Default options\n\t\tthis.options = {\n\t\t\tfftSize: 512,\n\t\t\tbufferLen: 512,\n\t\t\tvoice_stop: function() {},\n\t\t\tvoice_start: function() {},\n\t\t\tsmoothingTimeConstant: 0.99,\n\t\t\tenergy_offset: 1e-8, // The initial offset.\n\t\t\tenergy_threshold_ratio_pos: 2, // Signal must be twice the offset\n\t\t\tenergy_threshold_ratio_neg: 0.5, // Signal must be half the offset\n\t\t\tenergy_integration: 1, // Size of integration change compared to the signal per second.\n\t\t\tfilter: [\n\t\t\t\t{ f: 200, v: 0 }, // 0 -> 200 is 0\n\t\t\t\t{ f: 2000, v: 1 } // 200 -> 2k is 1\n\t\t\t],\n\t\t\tsource: null,\n\t\t\tcontext: null\n\t\t};\n\n\t\t// User options\n\t\t// eslint-disable-next-line no-restricted-syntax\n\t\tfor (const option in options) {\n\t\t\t// eslint-disable-next-line no-prototype-builtins\n\t\t\tif (options.hasOwnProperty(option)) {\n\t\t\t\tthis.options[option] = options[option];\n\t\t\t}\n\t\t}\n\n\t\t// Require source\n\t\tif (!this.options.source) { throw new Error('The options must specify a MediaStreamAudioSourceNode.'); }\n\n\t\t// Set this.options.context\n\t\tthis.options.context = this.options.source.context;\n\n\t\t// Calculate time relationships\n\t\tthis.hertzPerBin = this.options.context.sampleRate / this.options.fftSize;\n\t\tthis.iterationFrequency = this.options.context.sampleRate / this.options.bufferLen;\n\t\tthis.iterationPeriod = 1 / this.iterationFrequency;\n\n\t\tconst DEBUG = true;\n\t\tif (DEBUG) {\n\t\t\tconsole.log(\n\t\t\t\t`${'Vad'\n      + ' | sampleRate: '}${this.options.context.sampleRate\n\t\t\t\t} | hertzPerBin: ${this.hertzPerBin\n\t\t\t\t} | iterationFrequency: ${this.iterationFrequency\n\t\t\t\t} | iterationPeriod: ${this.iterationPeriod}`\n\t\t\t);\n\t\t}\n\n\t\tthis.setFilter = function(shape) {\n\t\t\tthis.filter = [];\n\t\t\tfor (let i = 0, iLen = this.options.fftSize / 2; i < iLen; i += 1) {\n\t\t\t\tthis.filter[i] = 0;\n\t\t\t\tfor (let j = 0, jLen = shape.length; j < jLen; j += 1) {\n\t\t\t\t\tif (i * this.hertzPerBin < shape[j].f) {\n\t\t\t\t\t\tthis.filter[i] = shape[j].v;\n\t\t\t\t\t\tbreak; // Exit j loop\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\tthis.setFilter(this.options.filter);\n\n\t\tthis.ready = {};\n\t\tthis.vadState = false; // True when Voice Activity Detected\n\n\t\t// Energy detector props\n\t\tthis.energy_offset = this.options.energy_offset;\n\t\tthis.energy_threshold_pos = this.energy_offset * this.options.energy_threshold_ratio_pos;\n\t\tthis.energy_threshold_neg = this.energy_offset * this.options.energy_threshold_ratio_neg;\n\n\t\tthis.voiceTrend = 0;\n\t\tthis.voiceTrendMax = 10;\n\t\tthis.voiceTrendMin = -10;\n\t\tthis.voiceTrendStart = 5;\n\t\tthis.voiceTrendEnd = -5;\n\n\t\t// Create analyser\n\t\tthis.analyser = this.options.context.createAnalyser();\n\t\tthis.analyser.smoothingTimeConstant = this.options.smoothingTimeConstant; // 0.99;\n\t\tthis.analyser.fftSize = this.options.fftSize;\n\n\t\tthis.floatFrequencyData = new Float32Array(this.analyser.frequencyBinCount);\n\n\t\t// Setup local storage of the Linear FFT data\n\t\tthis.floatFrequencyDataLinear = new Float32Array(this.floatFrequencyData.length);\n\n\t\t// Connect this.analyser\n\t\tthis.options.source.connect(this.analyser);\n\n\t\t// Create ScriptProcessorNode\n\t\tthis.scriptProcessorNode = this.options.context.createScriptProcessor(this.options.bufferLen, 1, 1);\n\n\t\t// Connect scriptProcessorNode (Theretically, not required)\n\t\tthis.scriptProcessorNode.connect(this.options.context.destination);\n\n\t\t// Create callback to update/analyze floatFrequencyData\n\t\tconst self = this;\n\t\tthis.scriptProcessorNode.onaudioprocess = function(event) {\n\t\t\tself.analyser.getFloatFrequencyData(self.floatFrequencyData);\n\t\t\tself.update();\n\t\t\tself.monitor();\n\t\t};\n\n\t\t// Connect scriptProcessorNode\n\t\tthis.options.source.connect(this.scriptProcessorNode);\n\n\t\t// log stuff\n\t\tthis.logging = false;\n\t\tthis.log_i = 0;\n\t\tthis.log_limit = 100;\n\n\t\tthis.triggerLog = function(limit) {\n\t\t\tthis.logging = true;\n\t\t\tthis.log_i = 0;\n\t\t\tthis.log_limit = typeof limit === 'number' ? limit : this.log_limit;\n\t\t};\n\n\t\tthis.log = function(msg) {\n\t\t\tif (this.logging && this.log_i < this.log_limit) {\n\t\t\t\tthis.log_i += 1;\n\t\t\t\tconsole.log(msg);\n\t\t\t} else {\n\t\t\t\tthis.logging = false;\n\t\t\t}\n\t\t};\n\n\t\tthis.update = function() {\n\t\t\t// Update the local version of the Linear FFT\n\t\t\tconst fft = this.floatFrequencyData;\n\t\t\tfor (let i = 0, iLen = fft.length; i < iLen; i += 1) {\n\t\t\t\t// eslint-disable-next-line no-restricted-properties\n\t\t\t\tthis.floatFrequencyDataLinear[i] = Math.pow(10, fft[i] / 10);\n\t\t\t}\n\t\t\tthis.ready = {};\n\t\t};\n\n\t\tthis.getEnergy = function() {\n\t\t\tif (this.ready.energy) {\n\t\t\t\treturn this.energy;\n\t\t\t}\n\n\t\t\tlet energy = 0;\n\t\t\tconst fft = this.floatFrequencyDataLinear;\n\n\t\t\tfor (let i = 0, iLen = fft.length; i < iLen; i += 1) {\n\t\t\t\tenergy += this.filter[i] * fft[i] * fft[i];\n\t\t\t}\n\n\t\t\tthis.energy = energy;\n\t\t\tthis.ready.energy = true;\n\n\t\t\treturn energy;\n\t\t};\n\n\t\tthis.monitor = function() {\n\t\t\tconst energy = this.getEnergy();\n\t\t\tconst signal = energy - this.energy_offset;\n\n\t\t\tif (signal > this.energy_threshold_pos) {\n\t\t\t\tthis.voiceTrend = (this.voiceTrend + 1 > this.voiceTrendMax) ? this.voiceTrendMax : this.voiceTrend + 1;\n\t\t\t} else if (signal < -this.energy_threshold_neg) {\n\t\t\t\tthis.voiceTrend = (this.voiceTrend - 1 < this.voiceTrendMin) ? this.voiceTrendMin : this.voiceTrend - 1;\n\t\t\t} else {\n\t\t\t\t// voiceTrend gets smaller\n\t\t\t\t// eslint-disable-next-line no-lonely-if\n\t\t\t\tif (this.voiceTrend > 0) {\n\t\t\t\t\tthis.voiceTrend -= 1;\n\t\t\t\t} else if (this.voiceTrend < 0) {\n\t\t\t\t\tthis.voiceTrend += 1;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tlet start = false; let\n\t\t\t\tend = false;\n\t\t\tif (this.voiceTrend > this.voiceTrendStart) {\n\t\t\t\t// Start of speech detected\n\t\t\t\tstart = true;\n\t\t\t} else if (this.voiceTrend < this.voiceTrendEnd) {\n\t\t\t\t// End of speech detected\n\t\t\t\tend = true;\n\t\t\t}\n\n\t\t\t// Integration brings in the real-time aspect through the relationship with the frequency this functions is called.\n\t\t\tconst integration = signal * this.iterationPeriod * this.options.energy_integration;\n\n\t\t\t// Idea?: The integration is affected by the voiceTrend magnitude? - Not sure. Not doing atm.\n\n\t\t\t// The !end limits the offset delta boost till after the end is detected.\n\t\t\tif (integration > 0 || !end) {\n\t\t\t\tthis.energy_offset += integration;\n\t\t\t} else {\n\t\t\t\tthis.energy_offset += integration * 10;\n\t\t\t}\n\t\t\tthis.energy_offset = this.energy_offset < 0 ? 0 : this.energy_offset;\n\t\t\tthis.energy_threshold_pos = this.energy_offset * this.options.energy_threshold_ratio_pos;\n\t\t\tthis.energy_threshold_neg = this.energy_offset * this.options.energy_threshold_ratio_neg;\n\n\t\t\t// Broadcast the messages\n\t\t\tif (start && !this.vadState) {\n\t\t\t\tthis.vadState = true;\n\t\t\t\tthis.options.voice_start();\n\t\t\t}\n\t\t\tif (end && this.vadState) {\n\t\t\t\tthis.vadState = false;\n\t\t\t\tthis.options.voice_stop();\n\t\t\t}\n\n\t\t\tthis.log(\n\t\t\t\t`e: ${energy\n\t\t\t\t} | e_of: ${this.energy_offset\n\t\t\t\t} | e+_th: ${this.energy_threshold_pos\n\t\t\t\t} | e-_th: ${this.energy_threshold_neg\n\t\t\t\t} | signal: ${signal\n\t\t\t\t} | int: ${integration\n\t\t\t\t} | voiceTrend: ${this.voiceTrend\n\t\t\t\t} | start: ${start\n\t\t\t\t} | end: ${end}`\n\t\t\t);\n\n\t\t\treturn signal;\n\t\t};\n\t};\n\n\t// eslint-disable-next-line no-param-reassign\n\twindow.VAD = VAD;\n}(window));\n"]}]}