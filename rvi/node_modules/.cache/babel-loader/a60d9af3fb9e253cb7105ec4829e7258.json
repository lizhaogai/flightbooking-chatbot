{"remainingRequest":"/media/alessio/Files/Universita/Magistrale/AI/SHRI/flightbooking-chatbot/rasa-voice-interface/node_modules/babel-loader/lib/index.js!/media/alessio/Files/Universita/Magistrale/AI/SHRI/flightbooking-chatbot/rasa-voice-interface/node_modules/cache-loader/dist/cjs.js??ref--0-0!/media/alessio/Files/Universita/Magistrale/AI/SHRI/flightbooking-chatbot/rasa-voice-interface/node_modules/vue-loader/lib/index.js??vue-loader-options!/media/alessio/Files/Universita/Magistrale/AI/SHRI/flightbooking-chatbot/rasa-voice-interface/src/components/VoiceFooter.vue?vue&type=script&lang=js&","dependencies":[{"path":"/media/alessio/Files/Universita/Magistrale/AI/SHRI/flightbooking-chatbot/rasa-voice-interface/src/components/VoiceFooter.vue","mtime":1577442544062},{"path":"/media/alessio/Files/Universita/Magistrale/AI/SHRI/flightbooking-chatbot/rasa-voice-interface/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/media/alessio/Files/Universita/Magistrale/AI/SHRI/flightbooking-chatbot/rasa-voice-interface/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/media/alessio/Files/Universita/Magistrale/AI/SHRI/flightbooking-chatbot/rasa-voice-interface/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/media/alessio/Files/Universita/Magistrale/AI/SHRI/flightbooking-chatbot/rasa-voice-interface/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.typed.uint8-array\";\nimport _objectSpread from \"/media/alessio/Files/Universita/Magistrale/AI/SHRI/flightbooking-chatbot/rasa-voice-interface/node_modules/@babel/runtime-corejs2/helpers/esm/objectSpread\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\n/* eslint-disable no-unused-vars */\n\n/* Helpers */\nimport { mapGetters, mapState } from 'vuex';\n/* Mixins */\n\nimport MessageHandlerMixin from '../mixins/MessageHandlerMixin';\nimport '@/assets/lib/vad';\nexport default {\n  name: 'Footer',\n  mixins: [MessageHandlerMixin],\n  data: function data() {\n    return {\n      audioContext: undefined,\n      mediaRecorder: {},\n      isRecording: false,\n      dataArray: [],\n      analyser: undefined,\n      canvas: undefined,\n      ctx: undefined,\n      canvasHeight: undefined,\n      canvasWidth: undefined,\n      countFrame: 0,\n      recordTime: undefined\n    };\n  },\n  computed: _objectSpread({}, mapGetters(['chatStart', 'inputVisible', 'currentMessage', 'waitForResponse']), mapState(['incomeMessage', 'disableRecording']), {\n    readyToRecord: function readyToRecord() {\n      console.log('computed');\n\n      if (this.waitForRespose && this.incomeMessage.length === 1) {\n        return true;\n      }\n\n      return false;\n    }\n  }),\n  // watch: {\n  // \twaitForResponse(value) {\n  // \t\tconsole.log('watch');\n  // \t\tconsole.log(value);\n  // \t\tconsole.log(this.currentMessage.in.length);\n  // \t\tif (!value && this.currentMessage.in.length === 1) {\n  // \t\t\tthis.mediaRecorder.start();\n  // \t\t\tthis.isRecording = true;\n  // \t\t}\n  // \t}\n  // },\n  mounted: function mounted() {\n    // init canvas\n    this.canvas = document.getElementById('sound-visualizer');\n    this.ctx = this.canvas.getContext('2d');\n    this.canvasHeight = this.canvas.scrollHeight;\n    this.canvasWidth = this.canvas.scrollWidth;\n  },\n  methods: {\n    startChat: function startChat() {\n      this.$store.commit('setChatStart', true); // this.startRecord();\n    },\n    startRecord: function startRecord() {\n      var vm = this;\n      window.AudioContext = window.AudioContext || window.webkitAudioContext;\n      this.audioContext = new AudioContext({\n        sampleRate: 16000\n      });\n      this.isRecording = true; // Ask for audio device\n\n      navigator.getUserMedia = navigator.getUserMedia || navigator.mozGetUserMedia || navigator.webkitGetUserMedia;\n      navigator.getUserMedia({\n        audio: true\n      }, vm.startUserMedia, function (e) {\n        console.log(\"No live audio input in this browser: \".concat(e));\n      });\n    },\n    stopRecording: function stopRecording() {\n      this.isRecording = false;\n      this.audioContext.close().then(function () {\n        console.log('streaming close');\n      });\n    },\n    startUserMedia: function startUserMedia(stream) {\n      var vm = this;\n      vm.analyser = vm.audioContext.createAnalyser();\n      var source = vm.audioContext.createMediaStreamSource(stream).connect(vm.analyser);\n      console.log(vm.analyser);\n      vm.dataArray = new Uint8Array(vm.analyser.fftSize / 32);\n      vm.animate();\n      var chunks = [];\n      var audioOptions = {\n        audioBitsPerSecond: 16000\n      };\n      /*         This two lines using Mediarecorder            */\n      // vm.mediaRecorder = new MediaRecorder(stream, audioOptions);\n      // vm.mediaRecorder.start();\n\n      vm.mediaRecorder = new Recorder(source, {\n        numChannels: 1\n      });\n      vm.mediaRecorder.record();\n      window.setTimeout(function () {\n        if (vm.mediaRecorder.state === 'recording') {\n          vm.mediaRecorder.stop();\n          console.log('10 seconds, stop recording');\n        }\n      }, 10000); // Setup options\n\n      var options = {\n        source: source,\n        voice_stop: function voice_stop() {\n          /*         This line using Mediarecorder            */\n          // if (vm.mediaRecorder.state === 'recording') {\n          if (vm.isRecording) {\n            vm.mediaRecorder.stop();\n            vm.mediaRecorder.exportWAV(vm.createFileLink);\n            vm.stopRecording();\n            console.log('voice_stop');\n          }\n        },\n        voice_start: function voice_start() {\n          if (vm.isRecording) {\n            console.log('voice_start'); // } else if (!vm.isRecording && (this.incomeMessage.length === 0)) {\n            // \tconsole.log('StartRecording');\n            // \tvm.startRecord();\n          }\n        }\n      }; // Create VAD\n      // eslint-disable-next-line no-undef\n\n      var vad = new VAD(options);\n      /*              BELOW ARE USING MEDIARECORDER             */\n      // Store sound in datas\n      // this.mediaRecorder.ondataavailable = function(e) {\n      // \tchunks.push(e.data);\n      // };\n      // this.mediaRecorder.onstop = function(e) {\n      // \tconsole.log('recorder stopped');\n      // \tvm.$store.commit('setResponseStatus', true);\n      // \tthis.waitForRespose = true;\n      // \tconst blob = new Blob(chunks, { type: 'audio/ogg;codecs=0' });\n      // \tchunks = [];\n      // \tconst audioURL = window.URL.createObjectURL(blob);\n      // \tconst request = new XMLHttpRequest();\n      // \trequest.open('GET', audioURL, true);\n      // \trequest.responseType = 'blob';\n      // \trequest.onload = function() {\n      // \t\tconst reader = new FileReader();\n      // \t\treader.readAsDataURL(request.response);\n      // \t\treader.onload = function(el) {\n      // \t\t\tconsole.log('DataURL:', el.target.result);\n      // \t\t\tvm.sendMessageToBot(el.target.result);\n      // \t\t};\n      // \t};\n      // \trequest.send();\n      // };\n    },\n    createFileLink: function createFileLink(blob) {\n      var vm = this;\n      console.log('recorder stopped');\n      vm.$store.commit('setResponseStatus', true);\n      this.waitForRespose = true;\n      var audioURL = window.URL.createObjectURL(blob);\n      var request = new XMLHttpRequest();\n      request.open('GET', audioURL, true);\n      request.responseType = 'blob';\n\n      request.onload = function () {\n        var reader = new FileReader();\n        reader.readAsDataURL(request.response);\n\n        reader.onload = function (el) {\n          // console.log('DataURL:', el.target.result);\n          console.log('SEND RESULT TO THE BOT');\n          vm.sendMessageToBot(el.target.result);\n        };\n      };\n\n      request.send();\n    },\n    playMedia: function playMedia(audioPath) {\n      var audio = document.querySelector('.sound-clips');\n      audio.setAttribute('controls', '');\n      audio.setAttribute('autoplay', '');\n      audio.src = audioPath;\n    },\n    animate: function animate() {\n      this.ctx.globalAlpha = 0.5;\n\n      if (this.countFrame > 90) {\n        this.ctx.clearRect(0, 0, this.canvasWidth, this.canvasHeight);\n        this.countFrame = 0;\n      }\n\n      this.analyser.getByteFrequencyData(this.dataArray);\n      this.ctx.strokeStyle = '#fff'; // this.ctx.lineWidth = 0.5;\n\n      this.ctx.beginPath();\n      this.ctx.moveTo(-2, this.canvasHeight / 2);\n      var arrayLength = this.dataArray.length;\n      var countStep = this.canvasWidth / arrayLength;\n\n      for (var i = 1; i < arrayLength - 2; i += 1) {\n        var points = [];\n        points[0] = {\n          x: i * countStep,\n          y: (this.canvasHeight - this.dataArray[i]) / 2\n        };\n        points[1] = {\n          x: (i + 1) * countStep,\n          y: (this.canvasHeight - this.dataArray[i + 1]) / 2\n        };\n        var xc = (points[0].x + points[1].x) / 2;\n        var yc = (points[0].y + points[1].y) / 2;\n        this.ctx.quadraticCurveTo(points[0].x, points[0].y, xc, yc);\n      }\n\n      this.ctx.stroke();\n      this.countFrame += 1;\n      window.requestAnimationFrame(this.animate);\n    }\n  }\n};",{"version":3,"sources":["VoiceFooter.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n\t<!-- Footer: Input field + button -->\n\t<footer>\n\t\t<audio class=\"sound-clips\"></audio>\n\t\t<canvas id=\"sound-visualizer\" width=\"100%\" height=\"300px\">\n\t\t</canvas>\n\t\t<transition name=\"fade\" mode=\"out-in\">\n\t\t\t<div v-if=\"chatStart && !isRecording\">\n\t\t\t\t<button class=\"start-button btn\" :disabled=\"disableRecording\" @click=\"startRecord()\">\n\t\t\t\t\t<font-awesome-icon icon=\"microphone\" class=\"micro-icon\"/>\n\t\t\t\t</button>\n\t\t\t</div>\n\t\t</transition>\n\t\t<transition name=\"fade\" mode=\"out-in\">\n\t\t\t<div v-if=\"!chatStart\">\n\t\t\t\t<button class=\"start-button btn\" @click=\"startChat()\">START</button>\n\t\t\t</div>\n\t\t</transition>\n\t\t<transition name=\"fade\" mode=\"out-in\">\n\t\t\t<div v-if=\"chatStart && isRecording\">\n\t\t\t\t<button class=\"start-button btn\" @click=\"stopRecording()\">PAUSE</button>\n\t\t\t</div>\n\t\t</transition>\n\t</footer>\n</template>\n\n<script>\n/* eslint-disable no-unused-vars */\n/* Helpers */\nimport { mapGetters, mapState } from 'vuex';\n/* Mixins */\nimport MessageHandlerMixin from '../mixins/MessageHandlerMixin';\n\nimport '@/assets/lib/vad';\n\nexport default {\n\tname: 'Footer',\n\tmixins: [MessageHandlerMixin],\n\tdata() {\n\t\treturn {\n\t\t\taudioContext: undefined,\n\t\t\tmediaRecorder: {},\n\t\t\tisRecording: false,\n\t\t\tdataArray: [],\n\t\t\tanalyser: undefined,\n\t\t\tcanvas: undefined,\n\t\t\tctx: undefined,\n\t\t\tcanvasHeight: undefined,\n\t\t\tcanvasWidth: undefined,\n\t\t\tcountFrame: 0,\n\t\t\trecordTime: undefined\n\t\t};\n\t},\n\tcomputed: {\n\t\t...mapGetters(['chatStart', 'inputVisible', 'currentMessage', 'waitForResponse']),\n\t\t...mapState(['incomeMessage', 'disableRecording']),\n\t\treadyToRecord() {\n\t\t\tconsole.log('computed');\n\t\t\tif (this.waitForRespose && this.incomeMessage.length === 1) { return true; }\n\t\t\treturn false;\n\t\t}\n\t},\n\t// watch: {\n\t// \twaitForResponse(value) {\n\t// \t\tconsole.log('watch');\n\t// \t\tconsole.log(value);\n\t// \t\tconsole.log(this.currentMessage.in.length);\n\t// \t\tif (!value && this.currentMessage.in.length === 1) {\n\t// \t\t\tthis.mediaRecorder.start();\n\t// \t\t\tthis.isRecording = true;\n\t// \t\t}\n\t// \t}\n\t// },\n\tmounted() {\n\t\t// init canvas\n\t\tthis.canvas = document.getElementById('sound-visualizer');\n\t\tthis.ctx = this.canvas.getContext('2d');\n\t\tthis.canvasHeight = this.canvas.scrollHeight;\n\t\tthis.canvasWidth = this.canvas.scrollWidth;\n\t},\n\tmethods: {\n\t\tstartChat() {\n\t\t\tthis.$store.commit('setChatStart', true);\n\t\t\t// this.startRecord();\n\t\t},\n\t\tstartRecord() {\n\t\t\tconst vm = this;\n\t\t\twindow.AudioContext = window.AudioContext || window.webkitAudioContext;\n\t\t\tthis.audioContext = new AudioContext({ sampleRate: 16000 });\n\t\t\tthis.isRecording = true;\n\t\t\t// Ask for audio device\n\t\t\tnavigator.getUserMedia = navigator.getUserMedia\n\t\t\t\t|| navigator.mozGetUserMedia\n\t\t\t\t|| navigator.webkitGetUserMedia;\n\t\t\tnavigator.getUserMedia({ audio: true }, vm.startUserMedia, e => {\n\t\t\t\tconsole.log(`No live audio input in this browser: ${e}`);\n\t\t\t});\n\t\t},\n\t\tstopRecording() {\n\t\t\tthis.isRecording = false;\n\t\t\tthis.audioContext.close().then(() => {\n\t\t\t\tconsole.log('streaming close');\n\t\t\t});\n\t\t},\n\t\tstartUserMedia(stream) {\n\t\t\tconst vm = this;\n\t\t\tvm.analyser = vm.audioContext.createAnalyser();\n\t\t\tconst source = vm.audioContext.createMediaStreamSource(stream).connect(vm.analyser);\n\t\t\tconsole.log(vm.analyser);\n\t\t\tvm.dataArray = new Uint8Array(vm.analyser.fftSize / 32);\n\t\t\tvm.animate();\n\t\t\tconst chunks = [];\n\t\t\tconst audioOptions = {\n\t\t\t\taudioBitsPerSecond: 16000\n\t\t\t};\n\t\t\t/*         This two lines using Mediarecorder            */\n\t\t\t// vm.mediaRecorder = new MediaRecorder(stream, audioOptions);\n\t\t\t// vm.mediaRecorder.start();\n\t\t\tvm.mediaRecorder = new Recorder(source, { numChannels: 1 });\n\t\t\tvm.mediaRecorder.record();\n\t\t\twindow.setTimeout(() => {\n\t\t\t\tif (vm.mediaRecorder.state === 'recording') {\n\t\t\t\t\tvm.mediaRecorder.stop();\n\t\t\t\t\tconsole.log('10 seconds, stop recording');\n\t\t\t\t}\n\t\t\t}, 10000);\n\t\t\t// Setup options\n\t\t\tconst options = {\n\t\t\t\tsource: source,\n\t\t\t\tvoice_stop: function() {\n\t\t\t\t\t/*         This line using Mediarecorder            */\n\t\t\t\t\t// if (vm.mediaRecorder.state === 'recording') {\n\t\t\t\t\tif (vm.isRecording) {\n\t\t\t\t\t\tvm.mediaRecorder.stop();\n\t\t\t\t\t\tvm.mediaRecorder.exportWAV(vm.createFileLink);\n\t\t\t\t\t\tvm.stopRecording();\n\t\t\t\t\t\tconsole.log('voice_stop');\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\tvoice_start: function() {\n\t\t\t\t\tif (vm.isRecording) {\n\t\t\t\t\t\tconsole.log('voice_start');\n\t\t\t\t\t// } else if (!vm.isRecording && (this.incomeMessage.length === 0)) {\n\t\t\t\t\t// \tconsole.log('StartRecording');\n\t\t\t\t\t// \tvm.startRecord();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t};\n\t\t\t// Create VAD\n\t\t\t// eslint-disable-next-line no-undef\n\t\t\tconst vad = new VAD(options);\n\n\t\t\t/*              BELOW ARE USING MEDIARECORDER             */\n\t\t\t// Store sound in datas\n\t\t\t// this.mediaRecorder.ondataavailable = function(e) {\n\t\t\t// \tchunks.push(e.data);\n\t\t\t// };\n\n\t\t\t// this.mediaRecorder.onstop = function(e) {\n\t\t\t// \tconsole.log('recorder stopped');\n\t\t\t// \tvm.$store.commit('setResponseStatus', true);\n\t\t\t// \tthis.waitForRespose = true;\n\t\t\t// \tconst blob = new Blob(chunks, { type: 'audio/ogg;codecs=0' });\n\t\t\t// \tchunks = [];\n\t\t\t// \tconst audioURL = window.URL.createObjectURL(blob);\n\n\t\t\t// \tconst request = new XMLHttpRequest();\n\t\t\t// \trequest.open('GET', audioURL, true);\n\t\t\t// \trequest.responseType = 'blob';\n\t\t\t// \trequest.onload = function() {\n\t\t\t// \t\tconst reader = new FileReader();\n\t\t\t// \t\treader.readAsDataURL(request.response);\n\t\t\t// \t\treader.onload = function(el) {\n\t\t\t// \t\t\tconsole.log('DataURL:', el.target.result);\n\t\t\t// \t\t\tvm.sendMessageToBot(el.target.result);\n\t\t\t// \t\t};\n\t\t\t// \t};\n\t\t\t// \trequest.send();\n\t\t\t// };\n\t\t},\n\t\tcreateFileLink(blob) {\n\t\t\tconst vm = this;\n\t\t\tconsole.log('recorder stopped');\n\t\t\tvm.$store.commit('setResponseStatus', true);\n\t\t\tthis.waitForRespose = true;\n\t\t\tconst audioURL = window.URL.createObjectURL(blob);\n\n\t\t\tconst request = new XMLHttpRequest();\n\t\t\trequest.open('GET', audioURL, true);\n\t\t\trequest.responseType = 'blob';\n\t\t\trequest.onload = function() {\n\t\t\t\tconst reader = new FileReader();\n\t\t\t\treader.readAsDataURL(request.response);\n\t\t\t\treader.onload = function(el) {\n\t\t\t\t\t// console.log('DataURL:', el.target.result);\n\t\t\t\t\tconsole.log('SEND RESULT TO THE BOT');\n\t\t\t\t\tvm.sendMessageToBot(el.target.result);\n\t\t\t\t};\n\t\t\t};\n\t\t\trequest.send();\n\t\t},\n\t\tplayMedia(audioPath) {\n\t\t\tconst audio = document.querySelector('.sound-clips');\n\t\t\taudio.setAttribute('controls', '');\n\t\t\taudio.setAttribute('autoplay', '');\n\t\t\taudio.src = audioPath;\n\t\t},\n\t\tanimate() {\n\t\t\tthis.ctx.globalAlpha = 0.5;\n\t\t\tif (this.countFrame > 90) {\n\t\t\t\tthis.ctx.clearRect(0, 0, this.canvasWidth, this.canvasHeight);\n\t\t\t\tthis.countFrame = 0;\n\t\t\t}\n\t\t\tthis.analyser.getByteFrequencyData(this.dataArray);\n\t\t\tthis.ctx.strokeStyle = '#fff';\n\t\t\t// this.ctx.lineWidth = 0.5;\n\t\t\tthis.ctx.beginPath();\n\t\t\tthis.ctx.moveTo(-2, this.canvasHeight / 2);\n\t\t\tconst arrayLength = this.dataArray.length;\n\t\t\tconst countStep = this.canvasWidth / arrayLength;\n\n\t\t\tfor (let i = 1; i < arrayLength - 2; i += 1) {\n\t\t\t\tconst points = [];\n\t\t\t\tpoints[0] = {\n\t\t\t\t\tx: i * countStep,\n\t\t\t\t\ty: (this.canvasHeight - this.dataArray[i]) / 2\n\t\t\t\t};\n\t\t\t\tpoints[1] = {\n\t\t\t\t\tx: (i + 1) * countStep,\n\t\t\t\t\ty: (this.canvasHeight - this.dataArray[i + 1]) / 2\n\t\t\t\t};\n\t\t\t\tconst xc = (points[0].x + points[1].x) / 2;\n\t\t\t\tconst yc = (points[0].y + points[1].y) / 2;\n\t\t\t\tthis.ctx.quadraticCurveTo(points[0].x, points[0].y, xc, yc);\n\t\t\t}\n\t\t\tthis.ctx.stroke();\n\t\t\tthis.countFrame += 1;\n\t\t\twindow.requestAnimationFrame(this.animate);\n\t\t}\n\t}\n};\n</script>\n\n<style lang=\"scss\" scoped>\n#app footer {\n\tmargin-top: 30px;\n\tbackground: #fff;\n\tposition: relative;\n\tbottom: 32px;\n\twidth: 100%;\n\theight: calc(#{$footerSize} + 10px);\n\tpadding-bottom: 0;\n\t/* border-top: 3px solid #eee; */\n\tz-index: 3;\n\n\t&.active {\n\t\tdisplay: block;\n\t}\n\n\t.container-fluid {\n\t\theight: 100%;\n\t\tbackground: #f3f7fb;\n\t\twidth: calc(100% - 30px);\n\t\tborder-radius: 32px;\n\t}\n\t.start-button {\n\t\tfont-size: 11pt;\n\t\tcolor: #fff;\n\t\tposition: absolute;\n\t\ttop: -37.5px;\n\t\tleft: calc(50% - 37.5px);\n\t\twidth: 75px;\n\t\theight: 75px;\n\t\tborder-radius: 37.5px;\n\t\tborder: none;\n\t\tbox-shadow: -10px -10px 15px rgba(123, 1, 188, 1) inset,\n\t\t\t-1px -1px 15px rgba(0, 0, 0, 0.8);\n\t\tbackground: rgb(187,133,216);\n\t\tbackground: -moz-linear-gradient(151deg, rgba(187,133,216,1) 0%, rgba(123,1,188,1) 89%);\n\t\tbackground: -webkit-linear-gradient(151deg, rgba(187,133,216,1) 0%, rgba(123,1,188,1) 89%);\n\t\tbackground: linear-gradient(151deg, rgba(187,133,216,1) 0%, rgba(123,1,188,1) 89%);\n\t\tfilter: progid:DXImageTransform.Microsoft.gradient(\n\t\t\tstartColorstr=\"#bb85d8\",\n\t\t\tendColorstr=\"#7b01bc\",\n\t\t\tGradientType=1\n\t\t);\n\t}\n\t.micro-icon{\n\t\twidth: 30px;\n\t\theight: 30px;\n\t}\n\n\t#sound-visualizer{\n\t\tposition: absolute;\n\t\twidth: 100%;\n\t\theight: 300px;\n\t\ttop: -300px;\n\t}\n}\n</style>\n"],"sourceRoot":"src/components"}]}